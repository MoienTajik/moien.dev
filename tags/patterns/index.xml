<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Patterns on Moien Tajik</title><link>/tags/patterns/</link><description>Recent content in Patterns on Moien Tajik</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 19 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="/tags/patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Design Patterns - Mediator</title><link>/posts/2019-01-19-mediator-design-pattern/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>/posts/2019-01-19-mediator-design-pattern/</guid><description>Explore the Mediator design pattern, illustrated through an airport control tower analogy. Learn how it manages communications between planes in &lt;strong>C#&lt;/strong>, starting from the &lt;code>IAirTrafficControl&lt;/code> interface to the implementation of &lt;code>AirbusAirplane&lt;/code> and &lt;code>BoeingAirplane&lt;/code> classes. The article concludes with the &lt;code>JFKAirTrafficControl&lt;/code> class, demonstrating the pattern&amp;rsquo;s role in facilitating effective object interaction. Ideal for those interested in applying design patterns in software engineering.</description></item></channel></rss>